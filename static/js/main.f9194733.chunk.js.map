{"version":3,"sources":["music.ogg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","props","random","list","animateEnd","setState","isEnd","onStart","isStart","isShowList","music","load","play","startRodom","onEnd","pause","stopRadom","importList","visible2","importOk","importData","state","length","importCancel","_self","setInterval","index","currentIndex","clearInterval","sortList","sort","Math","message","success","onReset","handleOk","visible","showList","handleFileData","data","res","forEach","item","push","this","cls","uploadprops","accept","name","headers","authorization","showUploadList","beforeUpload","file","fileList","f","reader","FileReader","onload","e","target","result","workbook","XLSX","read","type","first_worksheet","Sheets","SheetNames","jsonArr","utils","sheet_to_json","header","slice","readAsBinaryString","className","width","height","params","particles","number","value","density","enable","value_area","color","shape","stroke","polygon","nb_sides","image","src","opacity","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","interactivity","events","onhover","mode","key","block","onClick","interval","title","centered","onOk","onCancel","okText","cancelText","okButtonProps","cancelButtonProps","map","ref","node","style","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f9194733.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/music.7a31176a.ogg\";","import React from 'react'\nimport { Button, message, Modal, Upload, Tooltip, Icon } from 'antd'\nimport Particles from 'react-particles-js';\nimport QueueAnim from 'rc-queue-anim';\nimport XLSX from 'xlsx';\n\nimport music from './music.ogg';\n\nimport './App.less';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isEnd: false,\n      isStart: false,\n      isShowList: false,\n      currentIndex: 0,\n      visible: false,\n      visible2: false,\n      importData: []\n    }\n  }\n\n  random = null\n  list = [\n    '张杰',\n    '王硕',\n    '程艳',\n    '许聪',\n    '李峥',\n    '李冬梅',\n    '聂君',\n    '程叶子',\n    '周洁',\n    '左超',\n    '吴崇茂',\n    '李名杭',\n    '张慧敏',\n    '吴露露',\n    '黄永亮',\n    '曾婵',\n    '何康',\n    '王培培',\n    '方坤',\n    '何丽明',\n    '袁恒',\n    '丁晓敏',\n    '吴咏',\n    '马雪',\n    '魏文杰',\n    '王珂頔',\n    '陈云',\n    '张玉曾',\n    '程泽',\n    '邬凯',\n    '刘力',\n    '陆龙龙',\n    '胡景香',\n    '白萌',\n    '张玲',\n    '张文俊',\n    '黄羿轲',\n    '李锐',\n    '徐敏',\n    '雷秀',\n    '杨梅',\n    '张长春',\n    '李跃亚',\n    '张仲元',\n    '王珣珏',\n    '李红敏',\n    '郑钰',\n    '石静',\n    '颜雨秋',\n    '秦博雅',\n    '刘敏',\n    '桂思耀',\n    '谢孟凡'\n  ];\n\n  animateEnd = () => {\n    this.setState({\n      isEnd: true\n    })\n  }\n\n  onStart = () => {\n    this.setState({\n      isStart: true,\n      isShowList: true\n    }, () => {\n      this.music.load();\n      this.music.play();\n      this.startRodom();\n    })\n  }\n\n  onEnd = () => {\n    this.setState({\n      isStart: false\n    }, () => {\n      this.music.pause();\n      this.stopRadom();\n    })\n  }\n\n  importList = () => {\n    this.setState({\n      visible2: true\n    });\n  }\n\n  importOk = () => {\n    const { importData } = this.state;\n    if (importData.length > 1) {\n      this.list = importData;\n    }\n    this.setState({\n      visible2: false,\n      importData: []\n    })\n  }\n\n  importCancel = () => {\n    this.setState({\n      importData: [],\n      visible2: false\n    })\n  }\n\n  startRodom = () => {\n    const _self = this;\n    _self.random = setInterval(() => {\n      let { currentIndex } = _self.state;\n      let index = currentIndex\n      index++\n      if (index > this.list.length - 1) {\n        index = 0\n        _self.setState({\n          currentIndex: 0\n        })\n      }\n      _self.setState({\n        currentIndex: index\n      })\n    }, 50)\n  }\n\n  stopRadom = () => {\n    clearInterval(this.random)\n  }\n\n  sortList = () => {\n    const { list } = this\n    list.sort(() => Math.random() - 0.5)\n    this.setState({\n      currentIndex: 0,\n      isStart: false,\n      isShowList: false\n    })\n    message.success('已打乱员工名单顺序')\n  }\n\n  onReset = () => {\n    this.stopRadom()\n    this.setState({\n      currentIndex: 0,\n      isShowList: false,\n      isStart: false\n    })\n  }\n\n  handleOk = () => {\n    this.setState({\n      visible: false\n    })\n  }\n\n  showList = () => {\n    this.setState({\n      visible: true\n    })\n  }\n\n  handleFileData = (data) => {\n    let res = [];\n    data.forEach(item => {\n      if (!!item[0]) {\n        res.push(item[0])\n      }\n    })\n    this.setState({\n      importData: [...res]\n    }, () => {\n      message.success('Excel上传成功，请点击确认按钮导入名单');\n    })\n  }\n\n  render() {\n\n\n    const { isEnd, isStart, isShowList, currentIndex, visible, visible2, importData } = this.state;\n\n    const cls = isEnd ? 'draw-content border' : 'draw-content'\n\n    const particles = {\n      number: {\n        value: 100,\n        density: {\n          enable: false,\n          value_area: 3200\n        }\n      },\n      color: {\n        value: \"#FDED24\"\n      },\n      shape: {\n        type: \"star\",\n        stroke: {\n          width: 5,\n          color: \"red\"\n        },\n        polygon: {\n          nb_sides: 5\n        },\n        image: {\n          src: \"\",\n          width: 100,\n          height: 100\n        }\n      },\n      opacity: {\n        value: 1,\n        random: true,\n        anim: {\n          enable: 1,\n          speed: 10,\n          opacity_min: .5,\n          sync: !1\n        }\n      },\n      size: {\n        value: 3,\n        random: true,\n        anim: {\n          enable: !1,\n          speed: 20,\n          size_min: 1,\n          sync: true\n        }\n      },\n      line_linked: {\n        enable: !0,\n        distance: 120,\n        color: \"#FF0\",\n        opacity: .6,\n        width: 1,\n      },\n    };\n\n    const interactivity = {\n      events: {\n        onhover: {\n          enable: true,\n          mode: 'grab'\n        }\n      }\n    }\n\n    const uploadprops = {\n      // 这里我们只接受excel2007以后版本的文件，accept就是指定文件选择框的文件类型\n      accept: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n      name: 'file',\n      headers: {\n        authorization: 'authorization-text',\n      },\n      showUploadList: false,\n      // 把excel的处理放在beforeUpload事件，否则要把文件上传到通过action指定的地址去后台处理\n      // 这里我们没有指定action地址，因为没有传到后台\n      beforeUpload: (file, fileList) => {\n        var rABS = true;\n        const f = fileList[0];\n        var reader = new FileReader();\n        const _self = this;\n        reader.onload = function (e) {\n          var data = e.target.result;\n          if (!rABS) data = new Uint8Array(data);\n          var workbook = XLSX.read(data, {\n            type: rABS ? 'binary' : 'array'\n          });\n          // 假设我们的数据在第一个标签\n          var first_worksheet = workbook.Sheets[workbook.SheetNames[0]];\n          // XLSX自带了一个工具把导入的数据转成json\n          var jsonArr = XLSX.utils.sheet_to_json(first_worksheet, { header: 1 });\n          // 通过自定义的方法处理Json，比如加入state来展示\n          _self.handleFileData(jsonArr.slice(1))\n        };\n        if (rABS) reader.readAsBinaryString(f); else reader.readAsArrayBuffer(f);\n        return false;\n      }\n    };\n\n    return (\n      <div className=\"draw-home-wrap\">\n        <Particles\n          width=\"100%\"\n          height=\"100%\"\n          params={{\n            particles,\n            interactivity\n          }}\n        />\n        <div className=\"draw-list\">\n          {\n            isShowList ?\n              <p>{this.list[currentIndex]}</p>\n              :\n              null\n          }\n\n        </div>\n        <div className={cls}>\n          {\n            !isStart ? (\n              <QueueAnim onEnd={this.animateEnd} interval={100}>\n                <div className=\"btn-groups\" key=\"a1\">\n                  <Button block type=\"ghost\" onClick={this.onStart}>开始抽奖</Button>\n                </div>\n                <div className=\"btn-groups\" key=\"a2\">\n                  <Button block type=\"ghost\" onClick={this.importList}>导入名单</Button>\n                </div>\n                <div className=\"btn-groups\" key=\"a3\">\n                  <Button block type=\"ghost\" onClick={this.showList}>查看员工名单</Button>\n                </div>\n                <div className=\"btn-groups\" key=\"a4\">\n\n                  <Button block type=\"ghost\" onClick={this.sortList}>名单乱序</Button>\n                </div>\n              </QueueAnim>\n            ) :\n              (\n                <QueueAnim onEnd={this.animateEnd}>\n                  <div className=\"btn-groups\" key=\"b1\">\n                    <Button block type=\"ghost\" onClick={this.onEnd}>停止</Button>\n                  </div>\n                  <div className=\"btn-groups\" key=\"b2\">\n                    <Button block type=\"ghost\" onClick={this.onReset}>重新开始</Button>\n                  </div>\n                </QueueAnim>\n              )\n          }\n        </div>\n        <Modal\n          title=\"导入名单\"\n          centered\n          visible={visible2}\n          onOk={this.importOk}\n          onCancel={this.importCancel}\n          okText=\"确定\"\n          cancelText=\"取消\"\n          okButtonProps={{ type: 'ghost' }}\n          cancelButtonProps={{ type: 'ghost' }}\n        >\n          <Upload {...uploadprops}>\n            <Tooltip title='导入excel文件'>\n              <Button type=\"primary\" >\n                <Icon type=\"upload\" /> 导入\n              </Button>\n            </Tooltip>\n          </Upload>\n          {\n            importData.length > 1 ? (\n              <div className=\"look-list\">\n                {\n                  importData.map((item, index) => {\n                    return (\n                      <p key={index}>{item}</p>\n                    );\n                  })\n                }\n              </div>\n            ) :\n              null\n          }\n\n        </Modal>\n        <Modal\n          title=\"抽奖名单\"\n          centered\n          visible={visible}\n          onOk={this.handleOk}\n          onCancel={this.handleOk}\n          okText=\"确定\"\n          cancelText=\"取消\"\n          okButtonProps={{ type: 'ghost' }}\n          cancelButtonProps={{ type: 'ghost' }}\n        >\n          <div className=\"look-list\">\n            {\n              this.list.map((item, index) => {\n                return (\n                  <p key={index}>{item}</p>\n                );\n              })\n            }\n          </div>\n        </Modal>\n        <audio ref={node => this.music = node} style={{width: 0, height: 0}} src={music} type=\"audio/ogg\">\n\n        </audio>\n      </div>\n    )\n  }\n\n} // class Home end","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}